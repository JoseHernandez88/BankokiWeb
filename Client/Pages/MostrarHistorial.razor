@page "/MostrarHistorial"
@inject Blazored.LocalStorage.ILocalStorageService LocalStore
@inject HttpClient Http
@inject NavigationManager NavigationManager

@using BakokiWeb.Shared;

<PageTitle>Mostrar Historial</PageTitle>

<h1>Historial de cuentas</h1>

@if (cuentas == null)
{
    <p>Esta cuenta no tiene historial...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre de la cuenta</th>
                <th>Fecha de inicio</th>
                <th>Historial de cuenta</th>
                <th>Número de cuenta</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cuenta in cuentas)
            {
                <tr>
                    <td>@cuenta.AccountName</td>
                    <td>@cuenta.IsOpen</td>
                    <td>@cuenta.Transaciones</td>
                    <td>@cuenta.AccountNumber</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {



    public List<Cuenta> cuentas = new List<Cuenta>();
    public Cliente? cli = new();

    protected override async Task OnInitializedAsync()
    {
        var email = await LocalStore.GetItemAsStringAsync("email");
        List<Cliente> list = new();
        Cliente? cli = new();
        var result = await Http.GetFromJsonAsync<List<Cliente>>($"api/Client/{email}");
        if(result is not null)
        {
            list = result.ToList();
            if (list.Any())
            {
                cli = list.FirstOrDefault();
            }
        }

        if (cli is not null)
        {
            //cli.cuenta contiene las cuentas de cli
            var results = await Http.GetFromJsonAsync<List<Cuenta>>($"api/Cuenta/{cli.Email}");
            @if (results != null)
            {
                cuentas = results;
            }
        }
       
    }
    /*void NavCuenta()
    {
        if (cli is not null)
        {
            NavigationManager.NavigateTo($"/Cuenta/{cli.Email}");
        }
        NavigationManager.NavigateTo($"/index");

    }

    void NavTransfer()
    {
        if (cli is not null)
        {
            NavigationManager.NavigateTo($"/Transfer/{cli.Email}");
        }
        NavigationManager.NavigateTo($"/index");

    }

    void NavOrdenarLibroDeCaja()
    {
        if (cli is not null)
        {
            NavigationManager.NavigateTo($"/OrdenarLibroDeCaja/{cli.Email}");
        }
        NavigationManager.NavigateTo($"/index");

    }*/
}


